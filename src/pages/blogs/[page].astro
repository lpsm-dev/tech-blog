---
import { getCollection } from "astro:content";
import BaseHead from "../../components/organisms/BaseHead.astro";
import Header from "../../components/organisms/Header.astro";
import Footer from "../../components/organisms/Footer.astro";
import BlogCard from "../../components/molecules/Card/BlogCard.astro";
import { paginatePosts } from "../../utils/pagination";
import { POSTS_PER_PAGE } from "../../consts";

export async function getStaticPaths() {
  const posts = await getCollection(
    "blog",
    ({ data }) => data.publish !== false,
  );
  const totalPages = Math.ceil(posts.length / POSTS_PER_PAGE);
  return Array.from({ length: totalPages - 1 }, (_, i) => ({
    params: { page: (i + 2).toString() },
    props: { page: i + 2, totalPages },
  }));
}

const { page, totalPages } = Astro.props;
const posts = await getCollection("blog", ({ data }) => data.publish !== false);
const currentPosts = paginatePosts(posts, page);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title="Meus Posts"
      description="Explore a minha coleção de artigos."
    />
    <style>
      body {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        margin: 0;
      }

      main {
        flex: 1;
        width: 100%;
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem;
        display: flex;
        flex-direction: column;
      }

      .base-header {
        text-align: center;
        margin-bottom: 2rem;
        padding: 2rem 1rem;
        background: linear-gradient(
          180deg,
          rgba(var(--accent), 0.08) 0%,
          rgba(var(--accent), 0.02) 100%
        );
        border-radius: 1.5rem;
      }

      .base-title {
        font-size: 3rem;
        font-weight: 800;
        color: rgb(var(--black));
        margin-bottom: 1rem;
        line-height: 1.2;
      }

      .base-description {
        font-size: 1.25rem;
        color: rgb(var(--gray));
        max-width: 600px;
        line-height: 1.6;
        margin: 0 auto;
      }

      .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 2rem;
        flex: 1;
        margin-bottom: 2rem;
      }

      .pagination {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin-top: 2rem;
      }

      .pagination a {
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1rem 2rem;
        font-size: 1.125rem;
        font-weight: 600;
        color: rgb(var(--nord6));
        background: rgb(var(--nord1));
        border: 3px solid rgb(var(--nord3));
        border-radius: 1rem;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        text-decoration: none;
        box-shadow:
          0 4px 6px rgba(0, 0, 0, 0.1),
          0 2px 4px rgba(0, 0, 0, 0.06);
      }

      [data-theme="light"] .pagination a {
        color: rgb(var(--nord0));
        background: rgb(var(--nord6));
        border-color: rgb(var(--nord4));
      }

      .pagination a::before {
        content: "";
        position: absolute;
        inset: -3px;
        background: linear-gradient(
          45deg,
          rgb(var(--nord7)),
          rgb(var(--nord8))
        );
        border-radius: inherit;
        z-index: -2;
        opacity: 0;
        transition: opacity 0.3s ease;
      }

      .pagination a:hover {
        transform: translateY(-2px);
        border-color: transparent;
      }

      .pagination a:hover::before {
        opacity: 1;
      }

      .arrow-icon {
        transition: transform 0.3s ease;
      }

      .pagination a:hover .arrow-icon {
        transform: translateX(4px);
      }

      .pagination a:hover .arrow-icon.prev {
        transform: translateX(-4px);
      }

      .no-posts {
        text-align: center;
        padding: 4rem 1rem;
        color: rgb(var(--gray));
        font-size: 1.25rem;
        flex: 1;
      }

      @media (max-width: 768px) {
        .blog-header {
          padding: 3rem 1rem;
          margin-bottom: 3rem;
        }

        .blog-title {
          font-size: 2.25rem;
        }

        .blog-description {
          font-size: 1.125rem;
          padding: 0 1rem;
        }

        .posts-grid {
          grid-template-columns: 1fr;
          gap: 1.5rem;
        }

        .pagination a {
          padding: 0.875rem 1.75rem;
          font-size: 1rem;
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <div class="base-header">
        <h1 class="base-title">Meus Posts</h1>
        <p class="base-description">Explore a minha coleção de artigos.</p>
      </div>
      {
        currentPosts.length > 0 ? (
          <div class="posts-grid">
            {currentPosts.map((post) => (
              <BlogCard post={post} />
            ))}
          </div>
        ) : (
          <div class="no-posts">No posts found. Check back soon!</div>
        )
      }
      <div class="pagination">
        {
          page > 2 && (
            <a href={`/blogs/${page - 1}`} class="previous">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="arrow-icon prev"
              >
                <path d="M19 12H5m7-7-7 7 7 7" />
              </svg>
              Previous Page
            </a>
          )
        }
        {
          page === 2 && (
            <a href={`/blogs`} class="previous">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="arrow-icon prev"
              >
                <path d="M19 12H5m7-7-7 7 7 7" />
              </svg>
              Previous Page
            </a>
          )
        }
        {
          page < totalPages && (
            <a href={`/blogs/${page + 1}`} class="next">
              Next Page
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="arrow-icon"
              >
                <path d="M5 12h14m-7-7 7 7-7 7" />
              </svg>
            </a>
          )
        }
      </div>
    </main>
    <Footer />
  </body>
</html>
